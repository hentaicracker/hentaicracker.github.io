(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{384:function(a,s,t){"use strict";t.r(s);var e=t(17),n=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("p",[a._v("前提条件：")]),a._v(" "),s("p",[a._v("一台支持 CPU 虚拟化（在 BIOS 中开启），磁盘大于 100 G 的电脑。")]),a._v(" "),s("p",[a._v("步骤：")]),a._v(" "),s("p",[a._v("1.准备一个 centos 7/8 的环境（kernel内核版本超过 4.0）")]),a._v(" "),s("p",[a._v("2.安装 docker 并启动")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# sudo systemctl daemon-reload")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl restart "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v("\n")])])]),s("p",[a._v("3.安装 QEMU 和 KVM 环境")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" libvirt qemu-kvm\n")])])]),s("p",[a._v("4.加载 libvirt 和 KVM 模块")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("enable")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--now")]),a._v(" libvirtd\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("enable")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--now")]),a._v(" virtlogd\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("tee")]),a._v(" /sys/module/kvm/parameters/ignore_msrs\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" modprobe kvm\n")])])]),s("p",[a._v("5.拉取已提前安装好的 macOS(Catalina) 镜像")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 40GB disk space required: 20GB original image 20GB your container.")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" pull sickcodes/docker-osx:auto\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# boot directly into a real OS X shell with a visual display [NOT HEADLESS]")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-it")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--device")]),a._v(" /dev/kvm "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("50922")]),a._v(":10022 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /tmp/.X11-unix:/tmp/.X11-unix "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"DISPLAY='),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("DISPLAY")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("0.0}")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GENERATE_UNIQUE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    sickcodes/docker-osx:auto\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# username is user")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# passsword is alpine")]),a._v("\n")])])]),s("p",[a._v("6.进入 macOS 系统配置服务，安装 xcode-select/Sketch/Node.js/PM2")]),a._v(" "),s("p",[a._v("7.编写 shell 启动脚本，启动 docker 时加上 OSX_COMMANDS 参数")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-it")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--device")]),a._v(" /dev/kvm "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("50922")]),a._v(":10022 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /tmp/.X11-unix:/tmp/.X11-unix "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 可视化界面需要")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"DISPLAY='),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("DISPLAY")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("0.0}")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 可视化界面需要")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"OSX_COMMANDS=/bin/bash -c '),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[a._v('\\"')]),a._v("put your commands here"),s("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[a._v('\\"')]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 自动执行脚本")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("PWD")]),a._v("}")]),a._v('/mac_hdd_ng.img:/image"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 跑已存在的镜像")]),a._v("\n    sickcodes/docker-osx:auto\n")])])]),s("p",[a._v("此步骤执行 pm2 start 命令时报错，pm2 command not found。在 container 内改为 pm2 startup 系统启动时就启动服务。")]),a._v(" "),s("p",[a._v("8.设置自动登录")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("defaults "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("write")]),a._v(" com.apple.loginwindow autoLoginUser "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-bool")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\ndefaults "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("write")]),a._v(" com.apple.loginwindow autoLoginWindow "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-string")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"user"')]),a._v("\n")])])]),s("p",[a._v("9.禁止锁屏")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("defaults "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("write")]),a._v(" com.apple.loginwindow DisableScreenLock "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-bool")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\n")])])]),s("p",[a._v("10.在配置的 Container 基础上制作新镜像")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-all")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("container id"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("new image name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 跑新的镜像")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--device")]),a._v(" /dev/kvm "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--device")]),a._v(" /dev/snd "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /tmp/.X11-unix:/tmp/.X11-unix "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    newImageName\n\n")])])]),s("p",[a._v("或：")]),a._v(" "),s("p",[a._v("找到对应的镜像文件进行移植")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("sudo find /var/lib/docker -size +10G | grep mac_hdd_ng.img\n")])])]),s("p",[a._v("使用 naked 启动")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("sudo docker run -it \\\n    --device /dev/kvm \\\n    -p 50922:10022 \\\n    -p 8080:8080 \\\n    -v \"${PWD}/mac_hdd_ng.img:/image\" \\\n    -e ADDITIONAL_PORTS='hostfwd=tcp::8080-:8080,' \\\n    sickcodes/docker-osx:naked\n")])])]),s("p",[a._v("或：")]),a._v(" "),s("p",[a._v("通过 contaienr 导出镜像文件")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#首先查看容器 ID")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-a")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用 docker export 命令将容器导出成一个文件")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("containerid"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" yourimage.tar\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在服务器中使用 docker import 导入镜像")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("import")]),a._v(" - yourimage "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v(" yourimage.tar\n")])])]),s("p",[a._v("直接 run 该镜像")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-it")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--device")]),a._v(" /dev/kvm "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("50922")]),a._v(":10022 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v(":8080 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" /tmp/.X11-unix:/tmp/.X11-unix "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"DISPLAY='),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("DISPLAY")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("0.0}")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("GENERATE_UNIQUE")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-e")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ADDITIONAL_PORTS")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'hostfwd=tcp::8080-:8080,'")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    yourimage\n")])])]),s("p",[a._v("问题：kernel too old")]),a._v(" "),s("p",[a._v("解决：更新 centos kernel 内核 https://cloud.tencent.com/developer/article/1472857")]),a._v(" "),s("p",[a._v("问题：gtk initialization failed")]),a._v(" "),s("p",[a._v("解决：安装 xhost https://github.com/sickcodes/Docker-OSX/issues/7")]),a._v(" "),s("p",[a._v("问题：macOS 安装完成后无法 reboot")]),a._v(" "),s("p",[a._v("解决：手动重启 docker")])])}),[],!1,null,null,null);s.default=n.exports}}]);