(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{396:function(s,t,a){"use strict";a.r(t);var e=a(17),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("最近在工作中遇到了一些麻烦的环境问题：在安装 "),t("a",{attrs:{href:"https://github.com/justadudewhohacks/opencv4nodejs",target:"_blank",rel:"noopener noreferrer"}},[s._v("opencv4nodejs"),t("OutboundLink")],1),s._v(" 这个 "),t("code",[s._v("npm")]),s._v(" 包时老是安装不成功，主要问题是该包依赖 "),t("code",[s._v("OpenCV")]),s._v(" 这个基于 "),t("code",[s._v("C++")]),s._v(" 的图像处理库，并且 "),t("code",[s._v("OpenCV")]),s._v(" 依赖了一些更底层的 "),t("code",[s._v("C")]),s._v(" 相关的编译库，另外安装这个包时还要编译 "),t("code",[s._v("Node.js addon")]),s._v("，如果当前系统里有相应工具链版本不支持的情况就会失败。")]),s._v(" "),t("p",[s._v("谷歌了很多解决办法，最后依旧无效，在弹尽粮绝之时，索性换了一种思路来解决这个问题：使用 "),t("code",[s._v("Docker")]),s._v(" 跑该服务。"),t("code",[s._v("Docker")]),s._v(" 天然就是为了抹平环境差异而生的，并且可以模拟生产环境，用它来跑开发环境是一个非常不错的选择。")]),s._v(" "),t("h2",{attrs:{id:"场景分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#场景分析"}},[s._v("#")]),s._v(" 场景分析")]),s._v(" "),t("p",[s._v("当前的业务开发场景是：通过 "),t("code",[s._v("opencv4nodejs")]),s._v(" 借助 "),t("code",[s._v("OpenCV")]),s._v(" 的能力输出一个图像处理的 "),t("code",[s._v("Node.js")]),s._v(" 服务。需要考虑的几个问题有：")]),s._v(" "),t("ol",[t("li",[s._v("docker 起的服务需要暴露端口给到本地应用访问；")]),s._v(" "),t("li",[s._v("本地源文件实时修改能映射到 docker 容器中去并重启服务；")])]),s._v(" "),t("p",[s._v("也就是需要让 docker 将端口以及某个工作目录映射到本地工作目录。")]),s._v(" "),t("h2",{attrs:{id:"镜像构建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#镜像构建"}},[s._v("#")]),s._v(" 镜像构建")]),s._v(" "),t("p",[s._v("首先构建 opencv4nodejs docker 镜像，这里参考原作者做的 "),t("a",{attrs:{href:"https://github.com/justadudewhohacks/opencv4nodejs-docker-images/blob/master/opencv-nodejs/Dockerfile",target:"_blank",rel:"noopener noreferrer"}},[s._v("docker 镜像"),t("OutboundLink")],1),s._v("：")]),s._v(" "),t("p",[s._v("首先构建一个基础镜像，基于 ubuntu 16.04 安装 OpenCV、Node.js 以及 opencv4nodejs、pm2 全局依赖，基础镜像 Dockerfile：")]),s._v(" "),t("div",{staticClass:"language-Dockerfile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" ubuntu:16.04")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ARG")]),s._v(" OPENCV_VERSION")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ARG")]),s._v(" NODEJS_MAJOR_VERSION")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ARG")]),s._v(" WITH_CONTRIB")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" OPENCV4NODEJS_DISABLE_AUTOBUILD=1")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置国内源")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" sed -i s@/archive.ubuntu.com/@/mirrors.aliyun.com/@g /etc/apt/sources.list")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" apt-get clean")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" apt-get update && "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n  apt-get install -y build-essential curl && "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n  apt-get install -y --no-install-recommends wget unzip git python cmake && "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n  curl -sL https://deb.nodesource.com/setup_"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${NODEJS_MAJOR_VERSION}")]),s._v(".x | bash && "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n  apt-get install -y nodejs --allow-unauthenticated && node -v && npm -v && "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n  rm -rf /var/lib/apt/lists/* && "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n  mkdir opencv && "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n  cd opencv && "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n  wget https://github.com/Itseez/opencv/archive/"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OPENCV_VERSION}")]),s._v(".zip --no-check-certificate -O opencv-"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OPENCV_VERSION}")]),s._v(".zip && "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n  unzip opencv-"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OPENCV_VERSION}")]),s._v(".zip && "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n  if [ -n "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$WITH_CONTRIB"')]),s._v(" ]; then "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n  wget https://github.com/Itseez/opencv_contrib/archive/"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OPENCV_VERSION}")]),s._v(".zip --no-check-certificate -O opencv_contrib-"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OPENCV_VERSION}")]),s._v(".zip; "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n  unzip opencv_contrib-"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OPENCV_VERSION}")]),s._v(".zip; "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n  fi && "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n  mkdir opencv-"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OPENCV_VERSION}")]),s._v("/build && "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n  cd opencv-"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OPENCV_VERSION}")]),s._v("/build && "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n  cmake_flags="),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-D CMAKE_BUILD_TYPE=RELEASE \\\n  -D BUILD_EXAMPLES=OFF \\\n  -D BUILD_DOCS=OFF \\\n  -D BUILD_TESTS=OFF \\\n  -D BUILD_PERF_TESTS=OFF \\\n  -D BUILD_JAVA=OFF \\\n  -D BUILD_opencv_apps=OFF \\\n  -D BUILD_opencv_aruco=OFF \\\n  -D BUILD_opencv_bgsegm=OFF \\\n  -D BUILD_opencv_bioinspired=OFF \\\n  -D BUILD_opencv_ccalib=OFF \\\n  -D BUILD_opencv_datasets=OFF \\\n  -D BUILD_opencv_dnn_objdetect=OFF \\\n  -D BUILD_opencv_dpm=OFF \\\n  -D BUILD_opencv_fuzzy=OFF \\\n  -D BUILD_opencv_hfs=OFF \\\n  -D BUILD_opencv_java_bindings_generator=OFF \\\n  -D BUILD_opencv_js=OFF \\\n  -D BUILD_opencv_img_hash=OFF \\\n  -D BUILD_opencv_line_descriptor=OFF \\\n  -D BUILD_opencv_optflow=OFF \\\n  -D BUILD_opencv_phase_unwrapping=OFF \\\n  -D BUILD_opencv_python3=OFF \\\n  -D BUILD_opencv_python_bindings_generator=OFF \\\n  -D BUILD_opencv_reg=OFF \\\n  -D BUILD_opencv_rgbd=OFF \\\n  -D BUILD_opencv_saliency=OFF \\\n  -D BUILD_opencv_shape=OFF \\\n  -D BUILD_opencv_stereo=OFF \\\n  -D BUILD_opencv_stitching=OFF \\\n  -D BUILD_opencv_structured_light=OFF \\\n  -D BUILD_opencv_superres=OFF \\\n  -D BUILD_opencv_surface_matching=OFF \\\n  -D BUILD_opencv_ts=OFF \\\n  -D BUILD_opencv_xobjdetect=OFF \\\n  -D BUILD_opencv_xphoto=OFF \\\n  -D CMAKE_INSTALL_PREFIX=/usr/local"')]),s._v(" && "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n  if [ -n "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$WITH_CONTRIB"')]),s._v(" ]; then "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n  cmake_flags="),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$cmake_flags -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-${OPENCV_VERSION}/modules"')]),s._v("; "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n  fi && "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n  curl https://raw.githubusercontent.com/opencv/opencv_3rdparty/34e4206aef44d50e6bbcd0ab06354b52e7466d26/boostdesc_bgm.i > ../../opencv_contrib-"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OPENCV_VERSION}")]),s._v("/modules/xfeatures2d/src/boostdesc_bgm.i && "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n  echo "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$cmake_flags")]),s._v(" && "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n  cmake "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$cmake_flags")]),s._v(" .. && "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n  make -j $(nproc) && "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n  make install && "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n  sh -c "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'echo \"/usr/local/lib\" > /etc/ld.so.conf.d/opencv.conf'")]),s._v(" && "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n  ldconfig && "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n  cd ../../../ && "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n  rm -rf opencv && "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n  npm install -g opencv4nodejs pm2 --unsafe-perm")]),s._v("\n")])])]),t("p",[s._v("在基础镜像 Dockerfile 同级目录执行：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker build -t ubuntu16.04-opencv3.4.1-node14 --build-arg OPENCV_VERSION=3.4.1 --build-arg WITH_CONTRIB=1 --build-arg NODEJS_MAJOR_VERSION=14 .\n")])])]),t("p",[s._v("至此，等待几分钟便制作好了基础的 "),t("code",[s._v("ubuntu16.04-opencv3.4.1-node14")]),s._v(" 镜像，接下来构建服务镜像。")]),s._v(" "),t("p",[s._v("构建服务镜像 Dockerfile：")]),s._v(" "),t("div",{staticClass:"language-Dockerfile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" ubuntu16.04-opencv3.4.1-node14")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm config set unsafe-perm=true --global")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /app")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" . .")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" NODE_PATH=/usr/lib/node_modules")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置 npm 私服")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm config set registry="),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://registry.m.jd.com/"')])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm i --production")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 工作目录，映射卷")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VOLUME")]),s._v(" [ "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/app/build"')]),s._v(" ]")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" npm run start && "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n  sleep 9999999d")]),s._v("\n")])])]),t("p",[s._v("在服务镜像 Dockerfile 同级目录执行：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker build -t cv-service .\n")])])]),t("p",[s._v("至此，便得到了最终的服务镜像。")]),s._v(" "),t("h2",{attrs:{id:"跑服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#跑服务"}},[s._v("#")]),s._v(" 跑服务")]),s._v(" "),t("p",[s._v("镜像制作好了，开始跑服务，这里需要将服务端口映射到本地端口，同时映射工作目录到本地目录：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker run -p 8080:8080 cv-service --mount type=bind,source=/Users/chenjunsheng/Documents/projects/sem/image-cropper/packages/server/build,target=/app/build\n")])])]),t("p",[s._v("服务启动之后，发现端口映射没问题，不过本地文件修改后，服务没有生效。")]),s._v(" "),t("p",[s._v("那只能跑到镜像里查看一下问题的所在，先查看一下当前跑的 docker container:")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('docker ps\n\n>\n\nCONTAINER ID   IMAGE        COMMAND                  CREATED         STATUS         PORTS                    NAMES\n0e7c44db4548   cv-service   "/bin/sh -c \'npm run…"   7 seconds ago   Up 6 seconds   0.0.0.0:8080->8080/tcp   CV\n')])])]),t("p",[s._v("拿到当前跑的 CONTAINER ID ，进入 container 内部查看日志：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker exec -it 0e7c44db4548 bash\n")])])]),t("p",[s._v("进入 container 内部后，查看 pm2 输出的日志:")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("pm2 logs\n")])])]),t("p",[s._v("然后本地目录修改代码，查看服务日志，最后发现是服务没有监听到文件变化，需要修改 pm2 配置：")]),s._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"apps"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"name"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xxx"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"script"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"build/index.js"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"cwd"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"./"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"log"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/export/xxx.log"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"log_date_format"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"YYYY-MM-DD HH:mm Z"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"error"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/export/xxx-err.log"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"output"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/export/xxx-out.log"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"max_memory_restart"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1536M"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"watch"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置监听")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"autorestart"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置自动重启")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"node_args"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"env"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"PORT"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"8080"')]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("修改后重启 pm2 服务即生效。")]),s._v(" "),t("h3",{attrs:{id:"使用-docker-compose"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-docker-compose"}},[s._v("#")]),s._v(" 使用 docker-compose")]),s._v(" "),t("p",[s._v("同时也可以使用 docker-compose 进行端口映射和数据卷映射，"),t("code",[s._v("docker-compose.yml")]),s._v(" 配置如下:")]),s._v(" "),t("div",{staticClass:"language-yml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3.0'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cv")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("container_name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" CV\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" cv"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("service\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'8080:8080'")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./packages/server/build:/app/build/'")]),s._v("\n")])])]),t("p",[s._v("至此，opencv4nodejs 安装不成功的问题便解决了，唯一不足的是，不能实时 debug 代码，只能在服务中打日志来测试。（开个脑洞：能否通过开个 debug 端口映射到本地编辑器呢，猜测可以。")]),s._v(" "),t("blockquote",[t("p",[s._v("20240130 更新\n可以用 dev containers 实现")])]),s._v(" "),t("h2",{attrs:{id:"docker-常用操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-常用操作"}},[s._v("#")]),s._v(" docker 常用操作")]),s._v(" "),t("p",[s._v("拉取镜像：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker pull <镜像名称>:<版本>\n")])])]),t("p",[s._v("构建镜像：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker build -t <镜像名> --build-arg <参数key>=<参数value> .\n")])])]),t("p",[s._v("本地镜像列表：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker images\n")])])]),t("p",[s._v("删除镜像：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker image rm <镜像ID>\n\n# 强制删除\ndocker rmi -f <镜像ID>\n")])])]),t("p",[s._v("启动容器：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 将主机 3000 端口映射到容器内 8080 端口\n# 将本地目录挂载到容器目录\ndocker run -p 3000:8080 cv-service --mount type=bind,source=/Users/chenjunsheng/Documents/projects/smartcode/opencv-service/build,target=/app/build\n\n# 启动一个容器 bash\ndocker run -i -t centos7 /bin/bash\n")])])]),t("p",[s._v("查看容器列表：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker container ls\n\ndocker ps\n")])])]),t("p",[s._v("停止容器：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker container stop <容器ID>\n\ndocker stop <容器ID>\n")])])]),t("p",[s._v("重启容器：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker container restart <容器ID>\n")])])]),t("p",[s._v("进入容器内：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker exec -it <容器ID> bash\n")])])]),t("p",[s._v("复制容器内文档：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 从本地复制到容器\ndocker cp <本地文件路径> <容器ID>:<容器路径>\n\n# 从容器复制到本地\ndocker cp <容器ID>:<容器路径> <本地文件路径>\n")])])]),t("h3",{attrs:{id:"docker-compose"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose"}},[s._v("#")]),s._v(" docker-compose")]),s._v(" "),t("p",[s._v("启动服务：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# -d 表示在后台运行\ndocker-compose up -d\n")])])]),t("p",[s._v("停止服务：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker-compose down\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);